[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\rapha\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\rapha\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 11.0.15)
[debug]       Load.loadUnit: plugins took 84.2842ms
[debug]       Load.loadUnit: defsScala took 0.248ms
[debug] [Loading] Scanning directory C:\Users\rapha\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rapha\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.9655 ms
[debug]           Load.resolveProject(global-plugins) took 40.7391ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\rapha\.sbt\1.0\plugins, plugins: List(<none>))) took 77.4095ms
[debug] [Loading] Done in C:\Users\rapha\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 94.5789ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.199ms
[debug]     Load.loadUnit(file:/C:/Users/rapha/.sbt/1.0/plugins/, ...) took 186.9937ms
[debug]   Load.apply: load took 330.8928ms
[debug]   Load.apply: resolveProjects took 5.253ms
[debug]   Load.apply: finalTransforms took 50.5854ms
[debug]   Load.apply: config.delegates took 5.9198ms
[debug]   Load.apply: Def.make(settings)... took 326.9208ms
[debug]   Load.apply: structureIndex took 80.8418ms
[debug]   Load.apply: mkStreams took 1.3249ms
[info] loading global plugins from C:\Users\rapha\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2236.5742ms
[debug]           Load.loadUnit: plugins took 26.5933ms
[debug]           Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\rapha\IdeaProjects\udemy-scala-beginners\project
[debug]             Load.loadUnit: mkEval took 7.8372ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rapha\IdeaProjects\udemy-scala-beginners\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.52 ms
[info] loading settings for project udemy-scala-beginners-build from idea.sbt ...
[debug]               Load.resolveProject(udemy-scala-beginners-build) took 2.8858ms
[debug]             Load.loadTransitive: finalizeProject(Project(id udemy-scala-beginners-build, base: C:\Users\rapha\IdeaProjects\udemy-scala-beginners\project, plugins: List(<none>))) took 4.8847ms
[debug] [Loading] Done in C:\Users\rapha\IdeaProjects\udemy-scala-beginners\project, returning: (udemy-scala-beginners-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 126.3085ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.9857ms
[debug]         Load.loadUnit(file:/C:/Users/rapha/IdeaProjects/udemy-scala-beginners/project/, ...) took 159.0181ms
[debug]       Load.apply: load took 160.57ms
[debug]       Load.apply: resolveProjects took 0.0968ms
[debug]       Load.apply: finalTransforms took 8.2891ms
[debug]       Load.apply: config.delegates took 0.5025ms
[debug]       Load.apply: Def.make(settings)... took 84.319ms
[debug]       Load.apply: structureIndex took 19.4177ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from C:\Users\rapha\IdeaProjects\udemy-scala-beginners\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2987.2952ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\rapha\IdeaProjects\udemy-scala-beginners
[debug]       Load.loadUnit: mkEval took 0.3039ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.838 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 29.9611ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\rapha\IdeaProjects\udemy-scala-beginners, plugins: List(<none>))) took 33.4056ms
[debug] [Loading] Done in C:\Users\rapha\IdeaProjects\udemy-scala-beginners, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1819.9701ms
[debug]     Load.loadUnit: cleanEvalClasses took 13.1655ms
[debug]   Load.loadUnit(file:/C:/Users/rapha/IdeaProjects/udemy-scala-beginners/, ...) took 4821.142ms
[debug] Load.apply: load took 4823.1139ms
[debug] Load.apply: resolveProjects took 0.1096ms
[debug] Load.apply: finalTransforms took 21.8027ms
[debug] Load.apply: config.delegates took 0.275ms
[debug] Load.apply: Def.make(settings)... took 51.195ms
[debug] Load.apply: structureIndex took 16.9499ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to udemy-scala-beginners (in build file:/C:/Users/rapha/IdeaProjects/udemy-scala-beginners/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54951 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54951, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to udemy-scala-beginners (in build file:/C:/Users/rapha/IdeaProjects/udemy-scala-beginners/)
[debug] > Exec(idea-shell, None, None)
